name: BE-final prod deploy

on:
  pull_request:
    types: [closed]

permissions:
  contents: read

jobs:
  if-merge:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up application-prod.yml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application-prod.yml
        env:
          jasypt.encryptor.password: ${{ secrets.JASYPT_PASSWORD }}

      - name: Build with Gradle
        run : |
          chmod +x ./gradlew
          ./gradlew build -x test

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build with Docker
        run : docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/neuroflow .

      - name: Docker push
        run : docker push ${{ secrets.DOCKERHUB_USERNAME }}/neuroflow:latest

  deploy:
    needs: if-merge
    runs-on: ubuntu-latest
    steps:
      - name: Execute Server Docker compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/neuroflow
            
            SERVER_STATUS=$(curl "http://${{ secrets.SERVER_IP }}/server/health-check")
            echo $IS_GREEN

            max_count=10
            count=0
            check=1
          
            if [ $SERVER_STATUS = "blue" ]; then 
              echo "## BLUE => GREEN ###"
              echo "1. green container up"
              sudo docker run --name prod-green -d -p ${{ secrets.GREEN_PORT }}:${{ secrets.CONTAINER_PORT }} -e server.state=green ${{ secrets.DOCKERHUB_USERNAME }}/neuroflow

              while [ $count -lt $max_count ]; do
                echo "2. green health check...  ($count)"
                count=$((count + 1))
                sleep 20
            
                REQUEST=$(curl "http://${{ secrets.SERVER_IP }}:${{ secrets.GREEN_PORT }}/server/health-check")
                if [ $REQUEST = "blue" ]; then
                  echo "health check success"
                  check=0
            
                  echo "3. update & reload nginx"
                  sudo sed -i 's|proxy_pass http://.*;|proxy_pass http://${{ secrets.SERVER_IP }}:${{ secrets.GREEN_PORT}};|' /home/ubuntu/neuroflow/nginx/nginx.conf
                
                  sudo docker cp /home/ubuntu/neuroflow/nginx/nginx.conf nginx:/etc/nginx/nginx.conf
                  sudo docker exec nginx nginx -s reload

                  echo "4. blue container down"
                  sudo docker stop prod-blue || true
                  sudo docker rm prod-blue || true
                  break;
                fi
              done;
            
              if [ $check = 1 ]; then
                echo "3. health check fail"
                sudo docker stop prod-green || true
                sudo docker rm prod-green || true
              fi  
            
            else
              echo "## GREEN => BLUE ###"
              echo "1. blue container up"
              sudo docker run --name prod-blue -d -p ${{ secrets.BLUE_PORT }}:${{ secrets.CONTAINER_PORT }} -e server.state=blue ${{ secrets.DOCKERHUB_USERNAME }}/neuroflow

              count=0
              while [ $count -lt $max_count ]; do
                echo "2. blue health check... ($count)"
                count=$((count + 1))
                sleep 20
            
                REQUEST=$(curl "http://${{ secrets.SERVER_IP }}:${{ secrets.BLUE_PORT }}/server/health-check")
                if [ $REQUEST = "green" ]; then 
                  echo "health check success"
                  check=0

                  echo "3. reload nginx"
                  sudo sed -i 's|proxy_pass http://.*;|proxy_pass http://${{ secrets.SERVER_IP }}:${{ secrets.BLUE_PORT}};|' /home/ubuntu/neuroflow/nginx/nginx.conf
            
                  sudo docker cp /home/ubuntu/neuroflow/nginx/nginx.conf nginx:/etc/nginx/nginx.conf
                  sudo docker exec nginx nginx -s reload

                  echo "4. green container down"
                  sudo docker stop prod-green || true
                  sudo docker rm prod-green || true
                  break;
                fi
              done;
            
              if [ $check = 1 ]; then
                echo "3. health check fail"
                sudo docker stop prod-blue || true
                sudo docker rm prod-blue ||true
              fi
            fi
            
            sudo docker system prune -f